julia> include("split_matrix_free.jl")

Starting Test
2D Domain Size: 8193 by 8193
Size of the solution matrix (GPU): 537001992 Bytes
Size of the solution matrix (CPU): 537001992 Bytes

Evaluting time to do one A * b
Timing results in ms

t_D2 = 11.035537004470825
t_boundary = 0.7275819778442383
t_total = 11.034169912338257
t_copy_data = 48.26760292053223

Starting Test
2D Domain Size: 16385 by 16385
Size of the solution matrix (GPU): 2147745800 Bytes
Size of the solution matrix (CPU): 2147745800 Bytes

Evaluting time to do one A * b
Timing results in ms

t_D2 = 44.435489892959595
t_boundary = 1.6416749954223633
t_total = 44.48924899101257
t_copy_data = 189.5084023475647

Starting Test
2D Domain Size: 32769 by 32769
ERROR: LoadError: Out of GPU memory trying to allocate 8.000 GiB
Effective GPU memory usage: 67.65% (8.064 GiB/11.921 GiB)
CUDA allocator usage: 8.000 GiB
Memory pool usage: 8.000 GiB (8.000 GiB allocated, 0 bytes cached)

Stacktrace:
  [1] #alloc#176
    @ ~/.julia/packages/CUDA/lwSps/src/pool.jl:267 [inlined]
  [2] alloc
    @ ~/.julia/packages/CUDA/lwSps/src/pool.jl:259 [inlined]
  [3] CuArray{Float64, 2}(#unused#::UndefInitializer, dims::Tuple{Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/lwSps/src/array.jl:28
  [4] CuArray
    @ ~/.julia/packages/CUDA/lwSps/src/array.jl:241 [inlined]
  [5] CuArray
    @ ~/.julia/packages/CUDA/lwSps/src/array.jl:249 [inlined]
  [6] test_matrix_free_A(level::Int64)
    @ Main /gpfs/home/yiminc/version-control/Poisson_Julia/matrix_free_new_formulation/split_matrix_free.jl:521
  [7] top-level scope
    @ /gpfs/home/yiminc/version-control/Poisson_Julia/matrix_free_new_formulation/split_matrix_free.jl:594
  [8] include(fname::String)
    @ Base.MainInclude ./client.jl:444
  [9] top-level scope
    @ REPL[3]:1
 [10] top-level scope
    @ ~/.julia/packages/CUDA/lwSps/src/initialization.jl:52
in expression starting at /gpfs/home/yiminc/version-control/Poisson_Julia/matrix_free_new_formulation/split_matrix_free.jl:594
